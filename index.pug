<!DOCTYPE html>
html(lang="zh-TW")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    meta(http-equiv="X-UA-Compatible", content="ie=edge")
    title ml5.js 開發神經網路圖像辨識 - Augustus - Let's Write

    link(rel="canonical", href="https://auguston.github.io/medium-ml5-image-classifier/")

    meta(property="fb:app_id", content="484081328635964")
    meta(property="og:url", content="https://auguston.github.io/medium-ml5-image-classifier/")
    meta(property="og:type", content="website")
    meta(property="og:site_name", content="Let's Write")
    meta(property="og:title", content="ml5.js 開發神經網路圖像辨識 - Let's Write")
    meta(property="og:description", content="ml5.js 開發神經網路圖像辨識 - Let's Write")
    meta(property="og:image", content="https://auguston.github.io/medium-ml5-image-classifier/fb.jpg")
    meta(property="og:image:width", content="1200")
    meta(property="og:image:height", content="630")

    link(rel="shortcut icon", href="https://i0.wp.com/letswrite.tw/wp-content/uploads/2019/07/cropped-letswrite512-1.jpg")

    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css")
    style.
      *, *::before, *::after {
        box-sizing: border-box;
      }
      body {
        background: #F5F5F5;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "微軟正黑體", "Microsoft JhengHei";
        color: #555;
      }

      /* loading mask */
      .loading-box {
        position: fixed;
        top: 0;
        left: 0;
        display: flex;
        justify-content: center;
        align-content: center;
        flex-wrap: wrap;
        width: 100%;
        height: 100%;
        background: #333;
        transition: opacity .4s ease;
      }
      .loading-box.fade {
        opacity: 0;
      }
      .loading-box .text {
        padding-top: 16px;
        width: 100%;
        letter-spacing: 1px;
        text-align: center;
        color: rgba(255, 255, 255, .87)
      }

      @keyframes loading {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
      .loading {
        width: 100px;
        height: 100px;
        user-select: none;
        border-radius: 50%;
        box-shadow: #b8d721 0px 1px 1px, #6fbd23 0.5px 0.866px 1px, #44a559 0.866px 0.5px 1px, #3d76b7 1px 0px 1px, #9f57ef 0.866px -0.5px 1px, #fb69c8 0.5px -0.866px 1px, #ff90c7 0px -1px 1px, #ffa481 -0.5px -0.866px 1px, #ff9c5b -0.866px -0.5px 1px, #ffcc6c -1px 0px 1px, #f6cb26 -0.866px 0.5px 1px, #fff019 -0.5px 0.866px 1px;
        filter: saturate(400%) contrast(0.9);
        animation: loading 0.46s linear infinite;
      }

      .container {
        display: flex;
        justify-content: center;
        align-content: center;
        flex-wrap: wrap;
        margin-right: auto;
        margin-left: auto;
        padding-top: 5vh;
        max-width: 80vw;
      }
      .container > section {
        margin-bottom: 32px;
        width: 100%;
      }
      h1, h2, h6, hr {
        margin: 0;
        text-align: center;
      }
      h1 {
        font-size: 28px;
      }
      h6 {
        padding-top: 12px;
        padding-bottom: 12px;
        font-size: 14px;
      }
      h6 a {
        text-decoration: none;
        color: #00A7E5;
      }
      h6 a:hover {
        color: #008BBF;
      }
      .divider {
        margin-bottom: 32px;
        width: 100%;
        border: 0;
        border-bottom: 1px solid #ccc;
      }
      .button {
        margin-right: auto;
        margin-left: auto;
        max-width: 300px;
      }
      input {
        display: none;
      }
      label {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 32px;
        padding: 8px 24px;
        background: #FFF;
        border: 1px solid #CCC;
        border-radius: 50px;
        cursor: pointer;
        transition: box-shadow .4s ease;
      }
      label:hover {
        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
      }
      label span {
        margin-left: 12px;
        font-size: 24px;
      }
      .result-box {
        display: flex;
        padding: 24px 16px;
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
      }
      .img {
        width: 70%;
      }
      .img img {
        display: block;
        margin-right: auto;
        margin-left: auto;
        max-width: 100%;
      }
      .predict {
        padding-left: 16px;
        width: 30%;
      }
      .predict .card:last-of-type {
        border-bottom-color: #FFF;
      }
      .card {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 16px;
        padding-bottom: 16px;
        border-bottom: 1px solid #eee;
      }
      h2 {
        margin-bottom: 24px;
      }
      .title {
        width: 80%;
        font-size: 20px;
      }
      .confidence {
        width: 20%;
        text-align: center;
        font-size: 36px;
        color: #808080;
      }

      @media screen and (max-width: 1440px) {
        .container {
          max-width: 90vw;
        }
      }
      @media screen and (max-width: 1279px) {
        .container {
          max-width: 100%;
        }
        .result-box {
          flex-wrap: wrap;
        }
        .img, .predict {
          width: 100%;
        }
        .img {
          margin-bottom: 32px;
        }
      }
      @media screen and (max-width: 480px) {
        .predict {
          padding-left: 0;
        }
        .card {
          flex-wrap: wrap;
        }
        .title, .confidence {
          padding-right: 8px;
          padding-left: 8px;
          width: 100%;
        }
        .confidence {
          text-align: right;
        }
      }
    
    // Google Tag Manager
    script.
      (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
      new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
      j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
      'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','GTM-PGQ9WQT');

  body

    // Google Tag Manager (noscript)
    noscript
      iframe(src="https://www.googletagmanager.com/ns.html?id=GTM-PGQ9WQT", height="0", width="0", style="display:none;visibility:hidden")

    #app.container

      section.loading-box(:class="{ 'fade': ready }")
        .loading
        .text Neural Networks loading

      section.title-box
        h1 ml5.js imageClassifier 神經網路圖像識別
        h6 筆記文：
          a(href="https://letswrite.tw/ml5-image-classifier/", target="_blank") Let's Write

      hr.divider

      section.button-box
        .button
          input#customFileInput(type="file", @change="aiPredict", accept="image/*")
          label(for="customFileInput")
            img.icon(src="upload.svg", alt="上傳檔案")
            span 選擇圖檔
      
      section.result-box(v-show="file !== null")
        .img
          h2 圖檔
          img#img(:src="img", ref="img")
        .predict
          h2 辨識結果
          .card(v-for="r in results")
            .title {{ r.label }}
            .confidence {{ (r.confidence * 100).toFixed() }}%


    script(src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.10/vue.min.js")
    script(src="https://unpkg.com/ml5@0.3.1/dist/ml5.min.js")
    script.
      const Img = new Vue({
        el: '#app',
        data: {
          classifier: null, // 圖像識別模型
          ready: false, // AI準備好了沒
          file: null, // input file
          img: null, // 上傳的圖檔
          results: null // AI預測結果
        },
        methods: {
          // 載入圖像識別模型的callback
          aiReady() {
            this.ready = true;
            setTimeout(() => {
              document.querySelector('.loading-box').remove()
            }, 500);
          },

          // 上傳圖片後執行判斷
          aiPredict(e) {

            // 抓上傳的圖檔
            this.file = e.target.files[0];
            this.img = URL.createObjectURL(this.file);
            this.img.width = this.$refs.img.width; // 設圖片寬
            this.img.height = this.$refs.img.height; // 設圖片高

            // 圖片讀取完，再讓AI判斷
            this.$refs.img.addEventListener('load', e => {
              this.classifier.predict(this.$refs.img, (err, results) => {
                console.log(results);
                this.results = results;
              });
            });

          }
        },
        created() {
          // 載入圖像識別模型：MobileNet、Darknet、Darknet-tiny
          this.classifier = ml5.imageClassifier('MobileNet', this.aiReady);
        }
      })